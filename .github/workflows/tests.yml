name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install nmap (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y nmap
    
    - name: Install nmap (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install nmap
    
    - name: Install nmap (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install nmap -y
        echo "C:\Program Files (x86)\Nmap" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[cli,test]
        pip install pytest-cov
    
    - name: Verify nmap installation
      continue-on-error: true
      run: |
        nmap --version || echo "nmap not found in PATH"
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          where nmap || echo "nmap not found (Windows)"
        else
          which nmap || echo "nmap not found"
        fi
      shell: bash
    
    - name: Debug environment
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls
        echo "Tests directory:"
        if [ -d "tests" ]; then ls tests/; else echo "tests directory not found"; fi
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "Installed packages:"
        pip list
      shell: bash
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=simple_scanner --cov-report=xml || echo "Tests failed with exit code $?"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella